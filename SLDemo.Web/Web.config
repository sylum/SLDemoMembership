<?xml version="1.0" encoding="utf-8"?>
<!-- Test depot github-->
<!-- Modification depuis github syncroniser-->
<!-- Modification depuis github récupérer-->
<!--
  Pour plus d'informations sur la configuration de votre application ASP.NET, consultez
  http://go.microsoft.com/fwlink/?LinkId=169433
  -->

<configuration>

  <appSettings>
    <add key="CslaAuthentication" value="Csla" />
    <add key="CslaWriter" value="Csla.Serialization.Mobile.CslaBinaryWriter, Csla" />
    <add key="CslaReader" value="Csla.Serialization.Mobile.CslaBinaryReader, Csla" />
    <add key="DalSecurityManagerType" value="DataAccess.DalSecurity.DalManager,DataAccess.DalSecurity" />
  </appSettings>

  <connectionStrings>
    <add name="ApplicationServices" 
         connectionString="Data Source=.\SQLEXPRESS;Initial Catalog=SLDemoSecurity;Integrated Security=True;MultipleActiveResultSets=True" 
         providerName="System.Data.SqlClient" />
  </connectionStrings>
  
  <system.web>
    <compilation debug="true" targetFramework="4.5.2" />
    <httpRuntime targetFramework="4.5.2" maxRequestLength="2147483647"/>
    <authentication mode="Forms" />
    <!-- https://msdn.microsoft.com/fr-fr/library/system.web.security.membership.userisonlinetimewindow(v=vs.110).aspx -->
    <!-- Le nombre de minutes après la dernière activité date/heure pour un utilisateur au cours de laquelle l’utilisateur est considéré en ligne. -->
    <membership userIsOnlineTimeWindow="10">
      <providers>
        <clear />
        <!-- 
        https://msdn.microsoft.com/en-us/library/system.web.security.sqlmembershipprovider_properties(v=vs.110).aspx 
        https://msdn.microsoft.com/en-us/library/system.web.security.sqlmembershipprovider.createuser(v=vs.110).aspx
        https://msdn.microsoft.com/en-us/library/system.web.security.membership.passwordstrengthregularexpression(v=vs.110).aspx
        https://msdn.microsoft.com/fr-fr/library/system.web.security.membership.passwordattemptwindow%28v=vs.110%29.aspx?f=255&MSPPError=-2147217396
        -->
        <!--
             enablePasswordRetrieval="false" 
             enablePasswordReset="true" 
             requiresQuestionAndAnswer="false" 
             requiresUniqueEmail="true" 
             maxInvalidPasswordAttempts="3" 
             passwordAttemptWindow="2" 
             minRequiredPasswordLength="6" 
             minRequiredNonalphanumericCharacters="0" 
             passwordStrengthRegularExpression="(?=.{6,})(?=(.*\d){1,})(?=(.*\W){1,})"
                Has at least 6 characters.
                Contains at least 1 digit.
                Contains at least 1 special (nonalphanumeric) character.
              passwordStrengthRegularExpression="(?=^.{8,12}$)(?=(?:.*?\d){2})(?=(?:.*?[a-z]){2})(?=(?:.*?[A-Z]){2})(?=(?:.*?[!@#$%*()_+^&}{:;?.]){1})(?!.*\s)[0-9a-zA-Z!@#$%*()_+^&]*$"
                (?=^.{8,12}$)  password length range from 8 to 12, the numbers are adjustable
                (?=(?:.*?[!@#$%*()_+^&}{:;?.]){1}) at least 1 special characters (!@#$%*()_+^&}{:;?.}) , the number is adjustable
                (?=(?:.*?\d){2})  at least 2 digits, the number is adjustable
                (?=(?:.*?[a-z]){2}) at least 2 lower case characters, the number is adjustable
                (?=(?:.*?[A-Z]){2}) at least 2 upper case characters, the number is adjustable
                => exemple AAzzz23456**
                https://regex101.com/
             -->
        <add connectionStringName="ApplicationServices" applicationName="/SLDemo" name="AspNetSqlMembershipProvider" type="System.Web.Security.SqlMembershipProvider" 
             requiresQuestionAndAnswer="false"
             requiresUniqueEmail="false"
             enablePasswordRetrieval="false"
             enablePasswordReset="false"
             maxInvalidPasswordAttempts="5" 
             passwordAttemptWindow="3"
             passwordStrengthRegularExpression="(?=^.{8,12}$)(?=(?:.*?\d){2})(?=(?:.*?[a-z]){2})(?=(?:.*?[A-Z]){2})(?=(?:.*?[!@#$%*()_+^&amp;}{:;?.]){1})(?!.*\s)[0-9a-zA-Z!@#$%*()_+^&amp;]*$"
             />
      </providers>
    </membership>
    <roleManager enabled="true" cacheRolesInCookie="false">
      <providers>
        <clear />
        <add connectionStringName="ApplicationServices" applicationName="/SLDemo" name="AspNetSqlRoleProvider" type="System.Web.Security.SqlRoleProvider" />
      </providers>
    </roleManager>
  </system.web>
  
  <system.serviceModel>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true" />
    <services>
      <service name="Csla.Server.Hosts.Mobile.WcfPortal" behaviorConfiguration="returnFaults">
        <endpoint binding="basicHttpBinding" bindingConfiguration="basicHttpBinding_IWcfPortal" contract="Csla.Server.Hosts.Mobile.IWcfPortal" />
      </service>
    </services>
    <bindings>
      <basicHttpBinding>
        <binding name="basicHttpBinding_IWcfPortal" maxReceivedMessageSize="2147483647" maxBufferPoolSize="2147483647" maxBufferSize="2147483647">
          <readerQuotas maxBytesPerRead="2147483647" maxArrayLength="2147483647" maxStringContentLength="2147483647" maxNameTableCharCount="2147483647" maxDepth="2147483647" />
        </binding>
      </basicHttpBinding>
    </bindings>
    <behaviors>
      <serviceBehaviors>
        <behavior name="returnFaults">
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
  </system.serviceModel>

</configuration>
